/*
Deployment script for IngenieriaBosco

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IngenieriaBosco"
:setvar DefaultFilePrefix "IngenieriaBosco"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[BrandProviders]...';


GO
CREATE TABLE [dbo].[BrandProviders] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [BrandId]    INT NOT NULL,
    [ProviderId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Brands]...';


GO
CREATE TABLE [dbo].[Brands] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [BrandName]    NVARCHAR (50) NOT NULL,
    [IsDolarValue] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([BrandName] ASC)
);


GO
PRINT N'Creating Table [dbo].[CashOperations]...';


GO
CREATE TABLE [dbo].[CashOperations] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [Amount]    MONEY         NOT NULL,
    [Operation] NVARCHAR (30) NOT NULL,
    [Currency]  VARCHAR (3)   NOT NULL,
    [Date]      DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Categories]...';


GO
CREATE TABLE [dbo].[Categories] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [CategoryName] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CategoryBrands]...';


GO
CREATE TABLE [dbo].[CategoryBrands] (
    [Id]         INT IDENTITY (1, 1) NOT NULL,
    [CategoryId] INT NOT NULL,
    [BrandId]    INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ClientEmails]...';


GO
CREATE TABLE [dbo].[ClientEmails] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [ClientId] INT            NOT NULL,
    [Email]    NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Clients]...';


GO
CREATE TABLE [dbo].[Clients] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]   NVARCHAR (50) NOT NULL,
    [LastName]    NVARCHAR (50) NOT NULL,
    [CUIL]        VARCHAR (11)  NOT NULL,
    [PhoneNumber] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Currency]...';


GO
CREATE TABLE [dbo].[Currency] (
    [Type]   VARCHAR (3) NOT NULL,
    [Amount] MONEY       NOT NULL,
    UNIQUE NONCLUSTERED ([Type] ASC)
);


GO
PRINT N'Creating Table [dbo].[ProductOrderList]...';


GO
CREATE TABLE [dbo].[ProductOrderList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [ProductOrderId] INT           NOT NULL,
    [Code]           NVARCHAR (40) NOT NULL,
    [Description]    TEXT          NOT NULL,
    [ListingPrice]   MONEY         NOT NULL,
    [Multiplier]     INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ProductOrders]...';


GO
CREATE TABLE [dbo].[ProductOrders] (
    [Id]         INT      IDENTITY (1, 1) NOT NULL,
    [ProviderId] INT      NOT NULL,
    [Date]       DATETIME NOT NULL,
    [ARGPrice]   MONEY    NOT NULL,
    [USDPrice]   MONEY    NOT NULL,
    [IsRecived]  BIT      NOT NULL,
    [IsPayed]    BIT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Products]...';


GO
CREATE TABLE [dbo].[Products] (
    [Id]              INT           IDENTITY (1, 1) NOT NULL,
    [Description]     TEXT          NOT NULL,
    [Code]            NVARCHAR (40) NOT NULL,
    [CategoryId]      INT           NOT NULL,
    [BrandId]         INT           NOT NULL,
    [ListingPrice]    MONEY         NOT NULL,
    [RetailPrice]     MONEY         NOT NULL,
    [WholesalerPrice] MONEY         NOT NULL,
    [Stock]           INT           NOT NULL,
    [WarningStock]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
PRINT N'Creating Table [dbo].[ProviderEmails]...';


GO
CREATE TABLE [dbo].[ProviderEmails] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [ProviderId] INT            NOT NULL,
    [Email]      NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Providers]...';


GO
CREATE TABLE [dbo].[Providers] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [ProviderName] NVARCHAR (100) NOT NULL,
    [PhoneNumber]  NVARCHAR (30)  NOT NULL,
    [CUIT]         VARCHAR (11)   NOT NULL,
    [Web]          NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([CUIT] ASC)
);


GO
PRINT N'Creating Table [dbo].[SellItems]...';


GO
CREATE TABLE [dbo].[SellItems] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [SellId]      INT           NOT NULL,
    [Code]        NVARCHAR (40) NOT NULL,
    [Description] TEXT          NOT NULL,
    [Amount]      INT           NOT NULL,
    [Price]       MONEY         NOT NULL,
    [SubTotal]    MONEY         NOT NULL,
    [Currency]    VARCHAR (3)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Sells]...';


GO
CREATE TABLE [dbo].[Sells] (
    [Id]                 INT           IDENTITY (1, 1) NOT NULL,
    [FactN]              VARCHAR (15)  NOT NULL,
    [PtoVta]             VARCHAR (8)   NOT NULL,
    [FirstName]          NVARCHAR (50) NOT NULL,
    [LastName]           NVARCHAR (50) NOT NULL,
    [CUIL]               VARCHAR (11)  NOT NULL,
    [ResponsabilidadIVA] NVARCHAR (40) NOT NULL,
    [Currency]           VARCHAR (3)   NOT NULL,
    [TotalPrice]         MONEY         NOT NULL,
    [IsPayed]            BIT           NOT NULL,
    [IsRetailPrice]      BIT           NOT NULL,
    [Date]               DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[BrandProviders]...';


GO
ALTER TABLE [dbo].[BrandProviders] WITH NOCHECK
    ADD FOREIGN KEY ([BrandId]) REFERENCES [dbo].[Brands] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[BrandProviders]...';


GO
ALTER TABLE [dbo].[BrandProviders] WITH NOCHECK
    ADD FOREIGN KEY ([ProviderId]) REFERENCES [dbo].[Providers] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[CategoryBrands]...';


GO
ALTER TABLE [dbo].[CategoryBrands] WITH NOCHECK
    ADD FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Categories] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[CategoryBrands]...';


GO
ALTER TABLE [dbo].[CategoryBrands] WITH NOCHECK
    ADD FOREIGN KEY ([BrandId]) REFERENCES [dbo].[Brands] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ClientEmails]...';


GO
ALTER TABLE [dbo].[ClientEmails] WITH NOCHECK
    ADD FOREIGN KEY ([ClientId]) REFERENCES [dbo].[Clients] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ProductOrderList]...';


GO
ALTER TABLE [dbo].[ProductOrderList] WITH NOCHECK
    ADD FOREIGN KEY ([ProductOrderId]) REFERENCES [dbo].[ProductOrders] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ProductOrders]...';


GO
ALTER TABLE [dbo].[ProductOrders] WITH NOCHECK
    ADD FOREIGN KEY ([ProviderId]) REFERENCES [dbo].[Providers] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Products]...';


GO
ALTER TABLE [dbo].[Products] WITH NOCHECK
    ADD FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Categories] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Products]...';


GO
ALTER TABLE [dbo].[Products] WITH NOCHECK
    ADD FOREIGN KEY ([BrandId]) REFERENCES [dbo].[Brands] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[ProviderEmails]...';


GO
ALTER TABLE [dbo].[ProviderEmails] WITH NOCHECK
    ADD FOREIGN KEY ([ProviderId]) REFERENCES [dbo].[Providers] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[SellItems]...';


GO
ALTER TABLE [dbo].[SellItems] WITH NOCHECK
    ADD FOREIGN KEY ([SellId]) REFERENCES [dbo].[Sells] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spBrand_CheckBrand]...';


GO
CREATE PROCEDURE [dbo].[spBrand_CheckBrand]
	@CategoryId INT,
	@Name NVARCHAR(50)
AS

BEGIN

SET NOCOUNT ON

SELECT [dbo].[Brands].[Id], [dbo].[Brands].[BrandName] as [Name], [IsDolarValue]        
	FROM dbo.Brands INNER JOIN
         dbo.CategoryBrands ON dbo.Brands.Id = dbo.CategoryBrands.BrandId
		 WHERE [dbo].[Brands].[Id] = ANY(SELECT [BrandId] FROM [dbo].[CategoryBrands] WHERE [CategoryId] = @CategoryId) and [BrandName] = @Name 
					
END
GO
PRINT N'Creating Procedure [dbo].[spBrand_Delete]...';


GO
CREATE PROCEDURE [dbo].[spBrand_Delete]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[BrandProviders]
	WHERE [BrandId] = @Id

DELETE FROM [dbo].[CategoryBrands]
	WHERE [BrandId] = @Id

DELETE FROM [dbo].[Brands]
	WHERE [Id] = @Id

EnD
GO
PRINT N'Creating Procedure [dbo].[spBrand_SelectByCategory_Provider]...';


GO
CREATE PROCEDURE [dbo].[spBrand_SelectByCategory_Provider]
	@CategoryId INT,
	@ProviderId INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [BrandName] as [Name], [IsDolarValue] FROM Brands
	where [Id] = ANY(Select [BrandId] From [CategoryBrands]
		where CategoryId = @CategoryId AND [BrandId] = ANY(SELECT [BrandId] FROM [BrandProviders] WHERE [ProviderId] = @ProviderId))

END
GO
PRINT N'Creating Procedure [dbo].[spBrand_SelectByCategoryId]...';


GO
CREATE PROCEDURE [dbo].[spBrand_SelectByCategoryId]
    @CategoryId INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Brands].[Id], [BrandName] as [Name], [IsDolarValue]
    FROM [dbo].[Brands] INNER JOIN
         [dbo].[CategoryBrands] ON [dbo].[Brands].Id = [dbo].[CategoryBrands].[BrandId] INNER JOIN
         [dbo].[Categories] ON [dbo].[CategoryBrands].[CategoryId] = [dbo].[Categories].[Id]
         WHERE [dbo].[CategoryBrands].[CategoryId] = @CategoryId and [dbo].[CategoryBrands].[BrandId] <> 1
END
GO
PRINT N'Creating Procedure [dbo].[spBrand_Update]...';


GO
CREATE PROCEDURE [dbo].[spBrand_Update]
	@Id INT,
	@Name NVARCHAR(50),
	@IsDolarValue BIT
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Brands]
	SET [BrandName] = @Name, [IsDolarValue] = @IsDolarValue
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spBrandProviders_Delete_Provider]...';


GO
CREATE PROCEDURE [dbo].[spBrandProviders_Delete_Provider]
	@BrandId INT,
	@ProviderId INT

AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[BrandProviders]
	WHERE [BrandId] = @BrandId and [ProviderId] = @ProviderId

END
GO
PRINT N'Creating Procedure [dbo].[spBrandProviders_Insert]...';


GO
CREATE PROCEDURE [dbo].[spBrandProviders_Insert]
	@BrandId INT,
	@ProviderId INT
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[BrandProviders]
	VALUES(@BrandId,@ProviderId)

END
GO
PRINT N'Creating Procedure [dbo].[spBrandProviders_SelectByBrand]...';


GO
CREATE PROCEDURE [dbo].[spBrandProviders_SelectByBrand]
	@BrandId INT
AS

BEGIN

SELECT [Id], [ProviderName] as [Name], [CUIT], [PhoneNumber], [Web]
	FROM [dbo].[Providers]
		WHERE [Id] = ANY(SELECT [ProviderId] FROM [dbo].[BrandProviders] WHERE [BrandId] = @BrandId)

END
GO
PRINT N'Creating Procedure [dbo].[spCashOperation_Insert]...';


GO
CREATE PROCEDURE [dbo].[spCashOperation_Insert]
	@Amount MONEY,
	@Operation NVARCHAR(30),
	@Currency VARCHAR(3),
	@Date VARCHAR(10)
AS

BEGIN

SET NOCOUNT ON

SET DATEFORMAT DMY

INSERT INTO [dbo].[CashOperations]
	VALUES(@Amount,@Operation,@Currency,@Date)

DECLARE @tmpAmount MONEY

SET @tmpAmount = (SELECT [Amount] FROM [dbo].[Currency] WHERE [Type] = @Currency)

UPDATE [dbo].[Currency]
	SET [Amount] = (@tmpAmount + @Amount)
	WHERE [Type] = @Currency

END
GO
PRINT N'Creating Procedure [dbo].[spCashOperation_SelectTop]...';


GO
CREATE PROCEDURE [dbo].[spCashOperation_SelectTop]
	@Quantity int
AS

BEGIN

SET NOCOUNT ON

SELECT TOP (@Quantity)
	[Id],[Amount],[Operation],[Currency],CONVERT(VARCHAR(10),[Date],103)[Date]
		FROM CashOperations ORDER BY [Date] DESC

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_Delete]...';


GO
CREATE PROCEDURE [dbo].[spCategory_Delete]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[BrandProviders] WHERE
	[BrandId] = ANY(SELECT [BrandId] FROM [CategoryBrands] WHERE [CategoryId] = @Id)

DELETE FROM [dbo].[CategoryBrands]
	WHERE [CategoryId] = @Id

DELETE FROM [dbo].[Categories]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_Insert]...';


GO
CREATE PROCEDURE [dbo].[spCategory_Insert]
	@CategoryName nvarchar(50)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[Categories]
	VALUES(@CategoryName)

DECLARE @CategoryId INT

SET @CategoryId = SCOPE_IDENTITY()

INSERT INTO [dbo].[CategoryBrands]
	VALUES(@CategoryId,1)

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_IsDuplicate]...';


GO
CREATE PROCEDURE [dbo].[spCategory_IsDuplicate]
	@CategoryName NVARCHAR(50)
AS

BEGIN 

SET NOCOUNT ON

IF EXISTS(SELECT * FROM [dbo].[Categories] WHERE [CategoryName] = @CategoryName)
	SELECT 1
ELSE 
	SELECT 0

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[spCategory_SelectAll]

AS

BEGIN

SET NOCOUNT ON

SELECT [Id] AS Id, [CategoryName] AS [Name] FROM [dbo].[Categories]

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_SelectByName]...';


GO
CREATE PROCEDURE [dbo].[spCategory_SelectByName]
	@Name NVARCHAR(50)
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [CategoryName] as [Name]
	FROM [dbo].[Categories]
		WHERE [CategoryName] = @Name

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_SelectByProvider]...';


GO
CREATE PROCEDURE [dbo].[spCategory_SelectByProvider]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [CategoryName] AS [Name] FROM Categories
	where [Id] = ANY(SELECT [CategoryId] FROM [CategoryBrands]
		where [BrandId] = ANY(SELECT [BrandId] FROM [BrandProviders] WHERE [ProviderId] = @Id))

END
GO
PRINT N'Creating Procedure [dbo].[spCategory_Update]...';


GO
CREATE PROCEDURE [dbo].[spCategory_Update]
	@Id INT,
	@CategoryName NVARCHAR(50)
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Categories]
	SET [CategoryName] = @CategoryName
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spCategoryBrands_Insert]...';


GO
CREATE PROCEDURE [dbo].[spCategoryBrands_Insert]
	@CategoryId INT,
	@BrandId INT
AS

BEGIN

INSERT INTO [dbo].[CategoryBrands]
	VALUES(@CategoryId,@BrandId)

END
GO
PRINT N'Creating Procedure [dbo].[spClient_Delete]...';


GO
CREATE PROCEDURE [dbo].[spClient_Delete]
	@Id INT

AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[ClientEmails]
	WHERE [ClientId] = @Id

DELETE FROM [dbo].[Clients]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spClient_DeleteEmail]...';


GO
CREATE PROCEDURE [dbo].[spClient_DeleteEmail]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[ClientEmails]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spClient_Insert]...';


GO
CREATE PROCEDURE [dbo].[spClient_Insert]
	@FirstName NVARCHAR(50),
	@LastName NVARCHAR(50),
	@CUIL NVARCHAR(11),
	@PhoneNumber NVARCHAR(50)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[Clients]
	VALUES(@FirstName,@LastName,@CUIL,@PhoneNumber)

END
GO
PRINT N'Creating Procedure [dbo].[spClient_InsertEmail]...';


GO
CREATE PROCEDURE [dbo].[spClient_InsertEmail]
	@ClientId INT,
	@Email NVARCHAR(100)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[ClientEmails]
	VALUES(@ClientId, @Email)

END
GO
PRINT N'Creating Procedure [dbo].[spClient_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[spClient_SelectAll]

AS

BEGIN

SET NOCOUNT ON

SELECT * FROM [dbo].[Clients]

END
GO
PRINT N'Creating Procedure [dbo].[spClient_SelectEmails]...';


GO
CREATE PROCEDURE [dbo].[spClient_SelectEmails]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [Email] FROM [dbo].[ClientEmails]
	WHERE [ClientId] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spClient_Update]...';


GO
CREATE PROCEDURE [dbo].[spClient_Update]
	@Id INT,
	@FirstName NVARCHAR(50),
	@LastName NVARCHAR(50),
	@CUIL NVARCHAR(11),
	@PhoneNumber NVARCHAR(50)
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Clients]
	SET [FirstName] = @FirstName,
		[LastName] = @LastName,
		[CUIL] = @CUIL,
		[PhoneNumber] = @PhoneNumber
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spClient_UpdateEmail]...';


GO
CREATE PROCEDURE [dbo].[spClient_UpdateEmail]
	@Id INT,
	@Email NVARCHAR(100)	
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[ClientEmails]
	SET [Email] = @Email
		WHERE [Id] = @Id
		
END
GO
PRINT N'Creating Procedure [dbo].[spCurrency_Select]...';


GO
CREATE PROCEDURE [dbo].[spCurrency_Select]
	@Type VARCHAR(3)
AS

BEGIN

SET NOCOUNT ON

SELECT [Amount]
	FROM [dbo].[Currency]
		WHERE [Type] = @Type

END
GO
PRINT N'Creating Procedure [dbo].[spId_GetLastID]...';


GO
CREATE PROCEDURE [dbo].[spId_GetLastID]
	@TableName NVARCHAR(50)
AS
BEGIN

SET NOCOUNT ON

	SELECT IDENT_CURRENT(@TableName)

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_CheckCode]...';


GO
CREATE PROCEDURE [dbo].[spProduct_CheckCode]
	@Code NVARCHAR(40)
AS

BEGIN

SET NOCOUNT ON 

SELECT [Id], [Code], [Description], [ListingPrice], [RetailPrice], [WholesalerPrice], [Stock], [WarningStock]
	FROM [dbo].[Products]
		WHERE [Code] = @Code

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_Delete]...';


GO
CREATE PROCEDURE [dbo].[spProduct_Delete]
	@Id INT
AS
BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[Products]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_GetCategory]...';


GO
CREATE PROCEDURE [dbo].[spProduct_GetCategory]
	@Id int
AS

BEGIN

SET NOCOUNT ON
SELECT  [dbo].[Categories].[Id], [dbo].[Categories].[CategoryName] as [Name]       
	FROM dbo.Products INNER JOIN
         dbo.Categories ON dbo.Products.CategoryId = dbo.Categories.Id
		 WHERE [dbo].[Products].[Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_Insert]...';


GO
CREATE PROCEDURE [dbo].[spProduct_Insert]
	@Description text,
	@Code NVARCHAR(40),
	@CategoryId INT,
	@BrandId INT,
	@ListingPrice MONEY,
	@RetailPrice MONEY,
	@WholesalerPrice MONEY,
	@Stock INT,
	@WarningStock INT
AS
BEGIN

SET NOCOUNT ON

	INSERT INTO [dbo].[Products]
		VALUES(@Description,@Code,@CategoryId,@BrandId,
			@ListingPrice,@RetailPrice,@WholesalerPrice,
				@Stock,@WarningStock)

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_Recived]...';


GO
CREATE PROCEDURE [dbo].[spProduct_Recived]
	@Id int
AS

BEGIN

SET NOCOUNT ON

DECLARE @temp INT

SET @temp = (select [Multiplier] from [dbo].[ProductOrderList] where [Id] = @Id)

update [dbo].[Products]
set Stock = (Stock + @temp)
where [Code] = (select [Code] from [dbo].[ProductOrderList] where [Id] = @Id)

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_SelectBrand]...';


GO
CREATE PROCEDURE [dbo].[spProduct_SelectBrand]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

SELECT        dbo.Brands.Id, dbo.Brands.BrandName as [Name],dbo.Brands.IsDolarValue
FROM            dbo.Products INNER JOIN
                         dbo.Brands ON dbo.Products.BrandId = dbo.Brands.Id
						 WHERE dbo.Products.Id = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_SelectByBrand]...';


GO
CREATE PROCEDURE [dbo].[spProduct_SelectByBrand]
	@BrandId INT
AS
BEGIN

SET NOCOUNT ON

SELECT [Id], [Code], [Description], [ListingPrice], [RetailPrice], [WholesalerPrice], [Stock], [WarningStock]
	FROM [dbo].[Products]
		WHERE BrandId = @BrandId

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_SelectByCategory]...';


GO
CREATE PROCEDURE [dbo].[spProduct_SelectByCategory]
	@CategoryId INT
AS
BEGIN

SET NOCOUNT ON

SELECT [Id], [Code], [Description], [ListingPrice], [RetailPrice], [WholesalerPrice], [Stock], [WarningStock]
	FROM [dbo].[Products]
		WHERE [CategoryId] = @CategoryId

END
GO
PRINT N'Creating Procedure [dbo].[spProduct_Update]...';


GO
CREATE PROCEDURE [dbo].[spProduct_Update]
	@Id INT,
	@Description text,
	@Code NVARCHAR(40),
	@CategoryId INT,
	@BrandId INT,
	@ListingPrice MONEY,
	@RetailPrice MONEY,
	@WholesalerPrice MONEY,
	@Stock INT,
	@WarningStock INT
AS
BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Products]
	SET [Description] = @Description,
		[Code] = @Code,
		[CategoryId] = @CategoryId,
		[BrandId] = @BrandId,
		[ListingPrice] = @ListingPrice,
		[RetailPrice] = @RetailPrice,
		[WholesalerPrice] = @WholesalerPrice,
		[Stock] = @Stock,
		[WarningStock] = @WarningStock
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_Delete]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_Delete]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[ProductOrderList]
	WHERE [ProductOrderId] = @Id

DELETE FROM [dbo].[ProductOrders]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_GetProducts]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_GetProducts]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [Code], [Description], [ListingPrice], [Multiplier]
	FROM [dbo].[ProductOrderList]
		WHERE [ProductOrderId] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_GetProvider]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_GetProvider]
	@Id INT
AS

BEGIN 

SET NOCOUNT ON

SELECT [Id], [ProviderName] as [Name], [CUIT], [PhoneNumber], [Web]
	FROM [dbo].[Providers]
		WHERE [Id] = ANY(SELECT [ProviderId] FROM [dbo].[ProductOrders] WHERE [Id] = @Id)

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_Insert]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_Insert]
	@ProviderId INT,
	@Date VARCHAR(10),
	@ARGPrice MONEY,
	@USDPrice MONEY,
	@IsRecived BIT,
	@IsPayed BIT
AS

BEGIN

SET NOCOUNT ON

SET DATEFORMAT DMY

INSERT INTO [dbo].[ProductOrders]
	VALUES(@ProviderId,@Date,@ARGPrice,@USDPrice,@IsRecived,@IsPayed)

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_InsertProduct]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_InsertProduct]
	@OrderId INT,
	@Code NVARCHAR(40),
	@Description TEXT,
	@ListingPrice MONEY,
	@Multiplier INT
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[ProductOrderList]
	VALUES(@OrderId,@Code,@Description,@ListingPrice,@Multiplier)

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_Payed]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_Payed]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[ProductOrders]
SET [IsPayed] = 1
WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_Recived]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_Recived]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[ProductOrders]
SET [IsRecived] = 1
WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProductOrder_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[spProductOrder_SelectAll]
	
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], CONVERT(VARCHAR(10),[Date],103)[Date], [USDPrice], [ARGPrice], [IsPayed], [IsRecived]
	FROM [dbo].[ProductOrders]

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_Delete]...';


GO
CREATE PROCEDURE [dbo].[spProvider_Delete]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[ProviderEmails]
	WHERE [ProviderId] = @Id

DELETE FROM [dbo].[BrandProviders]
	WHERE [ProviderId] = @Id

DELETE FROM [dbo].[Providers]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_DeleteEmail]...';


GO
CREATE PROCEDURE [dbo].[spProvider_DeleteEmail]
	@Id INT
AS

BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[ProviderEmails]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_Insert]...';


GO
CREATE PROCEDURE [dbo].[spProvider_Insert]
	@Name NVARCHAR(100),
	@PhoneNumber NVARCHAR(30),
	@CUIT VARCHAR(11),
	@Web NVARCHAR(100)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[Providers]
	VALUES(@Name,@PhoneNumber,@CUIT,@Web)

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_InsertEmail]...';


GO
CREATE PROCEDURE [dbo].[spProvider_InsertEmail]
	@ProviderId INT,
	@Email NVARCHAR(100)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[ProviderEmails]
	VALUES(@ProviderId,@Email)

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[spProvider_SelectAll]

AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [ProviderName] as [Name], [CUIT], [PhoneNumber], [Web]
	FROM [dbo].[Providers]

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_SelectEmails]...';


GO
CREATE PROCEDURE [dbo].[spProvider_SelectEmails]
	@ProviderId INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id], [Email] 
	FROM [dbo].[ProviderEmails]
		WHERE [ProviderId] = @ProviderId

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_Update]...';


GO
CREATE PROCEDURE [dbo].[spProvider_Update]
	@Id INT,
	@Name NVARCHAR(100),
	@PhoneNumber NVARCHAR(30),
	@CUIT VARCHAR(11),
	@Web NVARCHAR(100)
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Providers]
	SET [ProviderName] = @Name, [PhoneNumber] = @PhoneNumber,
		[CUIT] = @CUIT, [Web] = @Web
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spProvider_UpdateEmail]...';


GO
CREATE PROCEDURE [dbo].[spProvider_UpdateEmail]
	@Id INT,
	@Email NVARCHAR(100)
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[ProviderEmails]
	SET [Email] = @Email
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spSell_Delete]...';


GO
CREATE PROCEDURE [dbo].[spSell_Delete]
	@Id INT

AS 
BEGIN

SET NOCOUNT ON

DELETE FROM [dbo].[SellItems]
	WHERE [SellId] = @Id

DELETE FROM [dbo].[Sells]
	WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spSell_Insert]...';


GO
CREATE PROCEDURE [dbo].[spSell_Insert]
	@FactN VARCHAR(15),
	@PtoVta VARCHAR(8),
	@FirstName NVARCHAR(50),
	@LastName NVARCHAR(50),
	@CUIL VARCHAR(11),
	@ResponsabilidadIVA NVARCHAR(40),
	@Currency VARCHAR(3),
	@TotalPrice MONEY,
	@IsPayed BIT,
	@IsRetailPrice BIT,
	@Date VARCHAR(10)
AS

BEGIN

SET NOCOUNT ON

SET DATEFORMAT DMY

INSERT INTO [dbo].[Sells]
	VALUES(@FactN,@PtoVta,@FirstName,@LastName,@CUIL,@ResponsabilidadIVA,@Currency,@TotalPrice,@IsPayed,@IsRetailPrice,@Date)

END
GO
PRINT N'Creating Procedure [dbo].[spSell_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[spSell_SelectAll]
AS

BEGIN

SET NOCOUNT ON

SELECT [Id],[FactN],[PtoVta],[FirstName],[LastName],[CUIL],[ResponsabilidadIVA],[Currency],[TotalPrice],[IsPayed],CONVERT(VARCHAR(10),[Date],103)[Date]
	FROM [dbo].[Sells]

END
GO
PRINT N'Creating Procedure [dbo].[spSell_Update]...';


GO
CREATE PROCEDURE [dbo].[spSell_Update]
	@Id INT,
	@Currency VARCHAR(3),
	@TotalPrice MONEY,
	@IsPayed BIT
AS

BEGIN

SET NOCOUNT ON

UPDATE [dbo].[Sells]
	SET [Currency] = @Currency,
		[TotalPrice] = @TotalPrice,
		[IsPayed] = @IsPayed
		WHERE [Id] = @Id

END
GO
PRINT N'Creating Procedure [dbo].[spSellItem_Insert]...';


GO
CREATE PROCEDURE [dbo].[spSellItem_Insert]
	@SellId INT,
	@Code NVARCHAR(40),
	@Description TEXT,
	@Amount INT,
	@Price MONEY,
	@SubTotal MONEY,
	@Currency VARCHAR(3)
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[SellItems]
	VALUES(@SellId,@Code,@Description,@Amount,@Price,@SubTotal,@Currency)

END
GO
PRINT N'Creating Procedure [dbo].[spSellItem_SelectBySellId]...';


GO
CREATE PROCEDURE [dbo].[spSellItem_SelectBySellId]
	@SellId INT
AS

BEGIN

SET NOCOUNT ON

SELECT [Id],[Code],[Description],[Amount],[Price],[SubTotal],[Currency] FROM [dbo].[SellItems]
	WHERE [SellId] = @SellId

END
GO
PRINT N'Creating Procedure [dbo].[spBrand_Insert]...';


GO
CREATE PROCEDURE [dbo].[spBrand_Insert]
	@Name NVARCHAR(50),
	@IsDolarValue bit,
	@CategoryId INT
AS

BEGIN

SET NOCOUNT ON

INSERT INTO [dbo].[Brands]
	VALUES(@Name,@IsDolarValue)

DECLARE @BrandId INT

SET @BrandId = (SELECT SCOPE_IDENTITY())

EXEC [dbo].[spCategoryBrands_Insert] @CategoryId, @BrandId

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.BrandProviders'), OBJECT_ID(N'dbo.CategoryBrands'), OBJECT_ID(N'dbo.ClientEmails'), OBJECT_ID(N'dbo.ProductOrderList'), OBJECT_ID(N'dbo.ProductOrders'), OBJECT_ID(N'dbo.Products'), OBJECT_ID(N'dbo.ProviderEmails'), OBJECT_ID(N'dbo.SellItems'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO

INSERT INTO [dbo].[Brands]
	VALUES('',0)

INSERT INTO [dbo].[Currency]
	VALUES('USD',0)
INSERT INTO [dbo].[Currency]
	VALUES('ARG',0)